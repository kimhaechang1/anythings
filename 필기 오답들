

정적다이어그램은 : 클객컴배복패

UI 설계도구:

스토리보드 : 디자이너와 개발자가 최종적으로 참고하는 작업지침서
프로토타입 : 실제구현된것 처럼 테스트 가능한 동적형태의 모형

하향식 설계 방법 (스텁)
깊이 or 넓이 우선
테스트 초기부터 사용자에게 구조 보여줄수 잇음
상위 모듈에서는 tc 사용 x

상향식 설계방법 (클러스터, 드라이버)
하위모듈에서 상위모듈로 통합되면서 테스트 하는 방법
스텁은 필요하지않고 클러스터가 필요하다.

고프의 디자인 패턴

생성패턴

추상, 빌더, 팩토리, 싱글톤, 프로토 타입

구조 패턴

어댑터, 브리지, 컴포지트, 데코레이터, 파사드, 플라이웨이트, 프록시

행위 패턴

책임 연쇄, 커맨드, 인터프리터, 이터레이터, 메디에이터, 메멘토, 옵저버, 스테이트, 스트레터지, 템플릿, 비지트

럼바우 방법
모든 소프트웨어 구성 요소를 그래픽 표기법을 이용하여 모델링하는 기법
분석활동은 객체모델링 -> 동적모델링 -> 기능 모델링

객체모델링 : 객체 다이어그램 (객객)
동적 모델링 : 상태 다이어그램 (동상)
기능 모델링 : 자료흐름도 (기자)

자료 흐름도에는 
프로세스, 자료흐름, 자료저장소, 단말(Terminator)

부치 방법
미시적 개발프로세스와 거시적 개발 프로세스
클래스와 객체들을 분석 및 식별하고 클래스의 속성과 연산을 정의한다.

야콥슨(제이콥슨) 방법
유스케이스를 강조

코드와 요던 방법
E-R 다이어그램

Wirfs-Brock 방법
분석 설계간의 구분이 없고, 고객 명세서를 평가하여 설계 작업까지 연속적으로 수행하는 기법

선형구조 : 스택 큐 데크 리스트
비선형 구조 : 트리 그래프

NS - chart
3가지 기본구조만으로 논리를 표현
화살표 X
입구 1 출구 1

모든의 뜻인 A를 거꾸로 둔 것

카(카디널리티)행 디(디그리)열

CREATE TABLE에는 속성타입변경은 없다.

REVOKE는 DCL(데이터 제어어)에 해당 하는 권한을 해제하는 명령어

BETWEEN은 이상 이하

IPv4 
32 비트
멀티/브로드/유니
64바이트 고정 패킷

IPv6
128
유니/애니/멀티
임의의 크기의 패킷 가능

HTTP 응용계층

응집도 : 독립적 기능 수행 정도

데커 : flag

램퍼트 : 우선순위

피터슨 : 상대방에게 진입기회 양보

세마포어 : 동기화 대상이 하나 이상

모듈 : 유일한 이름을 가져야 한다

메모리 관리 기법
● 선택 할 때 사용 되고있는 곳은 못들어간다.
BestFit의 경우 제일작은거
WorstFit의 경우 상황을 보고 낭비가 제일 심한곳

strcat 문자열 붙이는 함수

프로세스와 메모리를 관리하는건 커널의 역할이다

LiFi : 5세대 통신기술

Scrapy : 파이썬 웹 크롤러

SBAS : GPS

자원삽입 : 자원을 조작 할 수 있는 문자열을 삽입하여 시스템이 보호하는 자원에 임의의로 접근할 수 있는 취약점

FAT : 저용량, 호환성

NTFS : 보안, 대용량, 안정성

DES : 64bit 암호화

Umask값은 666에서 파일권한을 빼라

리눅스 시스템에서 사용자의 성공한 로그인 로그아웃 기록, 종료/시작 시간 기록 : wtmp

테일러링 : 프로젝트 상황 특성에 맞게 정의돈 소프트웨어 개발 방법론 절차, 사용기법 등을 수정 보완하는 작업

디자인 패턴
생성 : 추빌팩프싱
구조 : 어브컴데퍼플프
행위 : 위의 2가지 다 해당 안되면 

깊이 우선 탐색은 이름 그대로 최대한 깊이 탐색한 이후 더 이상 탐색할 것이 없다면 그 이전으로 돌아가 탐색을 이어가는 것

UML 모델에서 한 사물의 명세가 바뀌면 다른 사물에도 영향을 주며 -> 의존성

파이프 필터 아키텍처에서는 데이터는 양방향 단방향 모두 구현 할 수 있으며 필터간 이동시 오버헤드가 발생 할 수 잇다.

테스트 스텁 : 하향식 즉 위에서 아래로 이므로
테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.

테스트 수행 도구 : 자료 흐름도, 기능 테스트, 입력도메인 분석, 랜덤 테스트

릴레이션 카티션 프로덕트 : 두 테이블의 곱집합
카디널
튜플


개체 무결성 : 기본키는 NULL 값을 가져서는 안되며, 릴레이션 내에 오직 하나의 값만 존재해야함
참조 무결성 : 외래키는 참조 할 수 없는 값을 가질수 없다.
도메인 결성 : 도메인에 속한 값이어야한다.

관계대수 연산에는  Select, Project Join Division이 있다.

슈퍼키 : 관계형 데이터베이스에서 속성들의 집함으로 구성된 키로서 모든 튜플에 대한 유일성은 만족시키지만 최소성은 만족시키지 못함

슈퍼키 : 유일성
후보키 : 유일성과 최소성
대체키 : 기본키로 선택되지 못한 후보키
외래키 : 다른 릴레이션의 기본키를 참조하는 속성

로킹 : 직렬화 기법
로킹단위 커지면 -> 로크의 수가 적어짐 -> 복잡해지지도 않고 병행성 수준이 낮아진다.

관계대수 : 관계형 데이터베이스에서 원하는 정보와 그 정보를 검색하기 위해서 어떻게 유도하는가를 기술하는 절차적인 언어.

이상의 종류에는 삽입, 갱신, 삭제 이상이 있다.

DDL : CREATE, DROP, ALTER
DML : SELECT, INSERT, DELETE, UPDATE
DCL : COMMIT, ROLLBACK, REVOKE

정수 앞에 !(NOT)이 붙으면 정수가 아님이란 의미로 부여

코코모 모델 :
Organic : 5만 라인 이하
Semidatached : 30만 라인이하
Embaded : 30만 라인 이상
LOC : Line of Code

MQTT 프로토콜 : 발행/구독 프로토콜

SingleSignOn : 하나의 시스템에서 인증에 성공하면 다른시스템에 대한 접근권한도 휙득

똑같은 패스워드들이 다른 암호 값으로 저장되도록 추 가되는 값 : Salt

시스템의 구성요소

입력, 처리, 출력, 제어, 피드백

개발프로세스 순서 도 분 명 확

옵저버 패턴
한 객체의 상태가 변화하면 객체에 상속되어 있는 다른 객체들에게 변화된 상태를 전달
분산된 시스템 간에 이벤트 생성, 발행, 이를 수신 해야할 때 이용함

비지터 패턴
각 클래스들의 데이터 구조에서 처리 기능을 분리하여 별도의 클래스로 구성함
분리된 처리 기능은 각 클래스를 방문하여 수행

팩토리 패턴 : 상위 클래스에서 객체를 생성하는 인터페이스를 정의하고, 하위 클래스에서 인스턴스를 생성하도록 하는 방식

프로토타입 패턴 : 프로토타입을 먼저 생성하고 인스턴스를 복제하여 사용하는 ㄱ조

브릿지 패턴 : 구현부에서 추상층을 분리하여 각자 독립적으로 확장이 가능하게 하는 패턴

시스템 품질속성 : 가용성 변경용이성 성능 보안성 사용편의성 시험용의성

서브시스템이 입력데이터를 받아 처리하고 결과를 다른 시스템에 보내는 작업이 반복되는 아키텍처 : 파이프 필터

UML 다이어그램에는 커뮤니케이션, 상태, 활동, 타이밍, 상호작용 다이어그램도 있다.

실체화 단계 (Realization) : 한 객체가 다른 객체에게 오퍼레이션을 수행하도록 지정하는 관계

애자일 방법론에는  : XP 스크럼, 기능주도개발, 적응형 소프트웨어 개발

생성패턴 : 추빌팩프싱

구조패턴 : 어브컴데퍼플프

화이트 박스 테스트 : 내부 구조나 동작을 검사하는 테스트 방식
기초 경로 검사, 조건 검사, 루프 검사, 데이터 흐름 검사 (기조루흐)
블랙박스 테스트 : 내부구조나 작동원리를 모르는 상태에서 입력에 따른 출력결과 테스트

저작권 관리구성 요소

DRM은 오류를 복구해주지 않는다.

콘텐츠 분배자, DRM 컨트롤러, 페키저, 클리어링 하우스 (라이선스 중개 및 발급)

콘텐츠 분배자 : 암호화된 콘텐츠를 유통
패키저 : 콘텐츠를 메타데이터와 함께 배포 가능한 형태로 묶어 암호화

WHERE절에는 원하는 조건이 와야하고 DISTINCT는 SELECT와 함께 사용한다.

INTERSECT : 교집합


결국 스키마 설계는 개념적 설계나 논리적 설계 때 하는것이다.

개념적 설계:
사용자의 요구사항 분석 후, 데이터베이스에 대한 추상적인 형태를 설계
개념적 스키마 생성

논리적설계:
논리적 스키마 설계
ERD를 이용하여 데이터베이스 스키마를 설계, 테이블 구조도, 개념적 설계단계에서 생성된 ERD를 바탕으로 생성되는 테이블들의 집합
목표 DBMS에 맞는 스키마 설계

물리적 설계
특정 DBMS가 제공하는 물리적 구조에 따라 테이블 저장 구조 설계
저장 레코드 양식 설계
레코드 집중의 분석 및 설계
접근 경로 설계

필드의 데이터 타입, 인덱스, 테이블 저장 방법

시분할기법 -> 운영체제

순수관계연산자 : select, project, join, division

각각의 튜플은 고유한 값을 가진다.
튜플사이에는 순서가 없다.
속성의 이름은 유일해야 하지만 값은 동일 할 수도 있다.

속성의 순서는 중요하지 않다.
속성은 더이상 쪼갤수 없는 원자값이 들어간다.

카티션 프로덕트는 곱집합인데

차수 (어트리뷰트)는 + 해주고 카디널리티(튜플)는 곱하기 해준다

ER 모델에는 삼각형이 없다.

3정규형 -> BCNF : 결저앚가 후보키가 아닌 함수 종속 제거

은행원 알고리즘은 : 회피
자원할당 그래프 : 탐지 즉 교착상태를 발생한 후 원인을 규명
선점, 프로세스 중지 : 복구 즉 현황대기를 배제시키거나 자원을 중단하는 메모리 할당 기법
예방 :  환영대기, 비선점, 점유와 대기, 상호배제 4가지 부정 즉 교착상태의 필요조건을 부정함으로서 교착상태가 발생하지 않도록 미리 예방하는 방법

CIDR 표기에서 /숫자 의 의미는 숫자만큼의 1이 있다는 것이다.
문제에서 203.241.132.82/27 이면 27개의 1이 있다는 것이다.
ipv4는 32비트로 이루어져 있으므로 구간별로 1을 8개씩 둔다.

11111111/11111111/11111111/11100000 으로 1을 27개 나열해보면
끝번호가 128 64 32 로 이루어져 있고 이들을 더하면 224가 나온다

배쉬 쉘에서 export는 매게변수 없이 쓰일 경우 현재 설정된 환경변수들이 출력된다.

사용자가 생성하는 변수는 export 명령어 표시하지 않는 한 현재 쉘에 국한된다.

변수를 export 시키면 전역변수 처럼 되어 끝까지 기억된다.

*변수를 일반적으로 출력하고자 할 때는 echo $변수명 이다.

아스키코드에서 대문자가 먼저고 그다음이 소문자다
따라서 'A' : 65 'a' : 97

페이징 기법

컴퓨터가 메인 메모리에서 사용하기 위해 데이터를 저장하고 검색하는 메모리 관리 기법

페이징 기법을 통해 물리적 메모리는 연속적으로 할당되어 존재할 필요가 없음
페이징 기법을 통해 비연속적 메모리를 연속적 메모리처럼 만들 수 있음

히트가 뜨거나 하는것

페이지 크기가 작은 경우

더 많은 페이징 사상테이블 필요
내부 단편화 감소
페이지의 집합을 효율적으로 운영 가능
기억장치의 효율 좋음
총 입출력 시간 증가

페이지 크기가 큼
주기억 장치 공간 절약
참조되는 정보와 무관한 양의 정보가 주기억장치에 남게되고
테이블이 복잡하지 않아 관리가 용이

응집도의 순서
(우논시절교순기)
우연적 (coincidental) <  논리적 < 시간적 < 절차적 < 교환적 < 순차적 < 기능적


고프의 디자인패턴
생성
추빌팩프싱
구조
어브컴데퍼플프

stdlib.h : 문자열 변환, 난수생성, 동적 메모리 관리 등의 함수들을 포함

한 노드로부터 다른노드로 프레임을 전송하는 책임 -> 데이터링크 계층

SSH는 22번 포트다

OSPF : 링크 상태 알고리즘을 사용한다.

소프트웨어 비용 추정 모형
COCOMO, Putnam, Function-Point

SPICE 모델의 프로세스 수행능력 수준의 단계별 설명
애초에  SPICE  모델은 0~5단계다

서로다른 단말기에서 동일컨텐츠를 자유롭게 이용가능한 N-Screen

일방향 암호화는 해쉬

AES : 암호화와 복호화 가 동일

현행 시스템 분석
플랫폼 기능 분석, 플랫폼 성능 특성 분석, 운영체제 분석, 네트dnjz 분석
DBMS 분석, 비즈니스 융합 분석

선택정렬은 정렬되지않은 원소중에서 가장 작은 값을 찾아서 정렬되지 않은 첫 번째 요소와 바꾸는 방법

DRM (디지털 저작권 관리) 기술 요소
암호화/키관리/암호화 파일 생성/식별기술/저작권 표현/정책관리/크랙방지/인증

이진 탐색 알고리즘
탐색 효율이 좋고 탐색 시간이 적게 소요된다.
검색할 데이터가 정렬되어 있어야 한다.
비교횟수를 거듭할 때마다 검색 대상이 되는 데이터의 수가 절반으로 줄어든다.

소프트웨어 형상관리
소프트웨어에서 일어나는 수정이나 변경을 알아내고 제어하는 것을 의미
소프트웨어개발 과정의 여러 방해 요인이 최소화 되도록 보증하는 것을 목적으로 한다.
형상관리의 기능 중 하나는 버전제어 기술이다.

관리항목
프로세스 요구 분석서, 소스코드, 운영 및 설치지침서

베타 태스트 -> 개발자 없이 고객의 사용환경에 소프트웨어를 설치하여 검사
병행제어방법의 로킹
데이터베이스, 파일, 레코드, 필드 등은 로킹단위가 될 수 있다.
로킹단위가 크면 -> 병행 수준이 낮고 데이터베이스 공유도 저하
로킹단위가 작으면 -> 오버헤드 증가, 병행성 수준 높음, 데이터베이스 공유도 증가



순수 관계대수 연산자

SELECT σ
PROJECT π
JOIN ▷◁
DIVISION ÷

튜플 : 테이블의 행
속성 : 테이블의 열
릴레이션의 논리적인 구조를 정의한 것은 릴레이션 스키마 이다.
도메인은 하나의 속성이 가질 수 있는 같은 타입의 모든 값의 집합으로 각 속성의 도메인은 원자값을 가진다.

1NF(도)-2NF(부)-3NF(이)-BCNF(결)-4NF(다)-5NF(조)
도부이결다줘

데이터링크 계층 : 동기화/오류제어/순서제어
물리계층 : 실제접속 및 절단/ 기계, 전기, 기능, 절차적 특성 규칙 정의
응용계층 : 전자사서함/파일전송
표현계층 : 데이터 변환/데이터 암호화/정보형식변환
전송계층 : 단말기(종단) 간

운영체제를 기능에 따라 분류할 경우
제어 프로그램

감시 프로그램
작업 제어 프로그램
데이터 관리 프로그램

CSMA/CD -> Token Bus -> Token ring -> Fiber obitc LANS -> 음성/데이터 통합 LAN -> 무선 LAN

교착상태 조건

Mutual exclusion : 상호배제
Hold and wait : 점유와 대기
Non-preemption : 비선점
Circular wait : 환형대기

TCP : 전송계층
IP : 네트워크 계층

파이썬에서 continue는 이후 문장 건너뛰기 이다.

tripwire : 크래커가 침입하여 백도어를 만들어 놓거나, 설정파일을 변경했을 때 분석하는 도구

공개키 암호

키 개수 구하는 방법

비밀키(대칭키) 는 N(N-1)/2
공개키(비대칭키)는 2N개입니다.

전위 후위 중위 바꾸기
ex) 다음의 전위식을 후위식으로 바꾼다면?
- / * A + B C D E

먼저 연산자에 따라 묶는다.
(-(/(*A(+BC))D)E)

연산자를 각 괄호 뒤로 뺀다.

(((A(BC)+)*D)/E)-

괄호를 제거한다.
ABC+*D/E-

해싱함수
제산법(디비젼), 중첩법(폴딩법), 숫자분석버, 기수 변환법, 무작위 방법

폴딩법 : 해싱함수 중 레코드 키를 여러 부분으로 나누고, 나눈 부분의 각 숫자를 더하거나 XOR 한 값을 홈 주소로 사용

제산법 : 레코드 키를 해시표로 나눈 나머지를 홈 주소로 사용

기수변환법 : 키 숫자의 진수를 다른 진수로 변환시켜 주소 크기를 초과한 높은 자릿수 절단, 다시 주소 범위에 맞게 조정

숫자 분석법 : 키 값을 이루는 숫자의 분포를 분석하여 비교적 고른 자리를 필요한 만큼 선택

Locality : 어느 한순간에 특정 부분을 집중적으로 참조
Thrashing : 지나치게 페이지 부재가 발생함으로 인하여 전체 시스템의 성능이 저하되는 현상

결합도:
높은 순서로
내공외제스자
내용 결합도 공통(Common)결합도 외부 결합도 제어 결합도 스탬프 결합도 자료결합도

연속성 (Durability) : 성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영되어야 한다.
독립성(Isolation) : 둘 이상의 트랜잭션이 동시에 병행 실행되는 경우 어느 하나의 트랜잭션 실행중에 다른 트랜잭션의 연산이 끼어들 수 없다.
일관성(Consistency) : 시스템이 가지고 있는 고정요소는 트랜잭션 수행 전과 트랜잭션 수행 완료 후의 상태가 같아야 한다.
원자성(Atomicity) : 데이터베이스에 반영되도록 완전히 완료 아니면 전혀 반영되지 않도록 복구 되어야 함

ALTER : 테이블에 칼럼(속성)추가
INSERT : 데이터 입력
DROP : 한번에 하나의 컬럼만 삭제
MODIFY : 데이터 유형, 기본값,  NOT NULL 제약조건에 대한 변경

EXISTS : WHERE절에 사용되며 IN과 비슷한 의미를 가진다.

로킹단위가 낮아지면 로크수, 병행제어, 오버헤드, 병행성 수준, DB공유도 전부 크거나 복잡해지거나 증가한다.

도메인 : 앤티티의 속성들이 가질수 있는 값의 집합

데이터 웨어하우스의 기본적인 OLAP연산

롤업, 슬라이싱&다이싱, 드릴업&다운, 피벗, 드릴-쓰루

1. 기능적 응집도(Functional Cohesion) : 모듈 내 모든 요소들이 단일 기능을 수행
2. 순차적 응집도(Sequential Cohesion) : 모듈 내의 한 요소의 출력 자료가 다음 요소의 입력 자료로 사용
3. 교환적 응집도(Communication Cohesion) : 모듈 내의 요소들이 동일한 입출력 자료로 서로 다른 기능을 수행
4. 절차적 응집도(Procedural Cohesion) : 모듈 수행 요소들이 반드시 특정 순서대로 수행
5. 시간적 응집도(Temporal Cohesion) : 특정 시간에 실행되는 기능들을 모아 작성된 모듈
6. 논리적 응집도(Logical Cohesion) : 논리적으로 유사한 기능을 수행 하지만 서로의 관계는 밀접하지 않음
7. 우연적 응집도(Coincidental Cohesion) : 모듈 내 요소들이 뚜렷한 관계가 없이 존재, 어떠한 의미 있는 연관관계도 지니지 않은 기능 요소로 구성되고 서로 다른 상위 모듈에 의해 호출되어 처리상의 연관성이 없는 서로 다른 기능을 수행하는 경우

IP : 데이터 주소를 지정하고 경로 설정
ARP : 호스트의 IP주소를 네트워크 접속장치의 물리적 주소로 변환
반대는 RARP

CMM 모델의 레벨
1. 초기
2. 관리
3. 정의
4. 정량적 관리
5. 최적화

SOA (서비스 지향 애플리케이션)
표현계층 프로세스계층 서비스 계층 비즈니스 계층 영속 계층

접근 통제 기술

MAC : 강제(Mandatory) 접근 통제
시스템이 주, 등급, 중앙집중적, 고정적
DAC : 임의(Discretionary) 접근통제
데이터 소유자, 신분, 변경 용이, GRANT, REVOKE
RBAC : 역할기반(Role Based) 접근 통제
중앙관리자, 역할, 변경 용이

공개키 암호화 방식

암호화와 복호화에 사용하는 키가 서로 다른 암호화 방식이다.
비대칭 암호 기법
대표적인 기법에 RSA
키 분배가 용이하고, 관리해야 할 키 개수가 적다.

Collective Ownership : 공동 소유
Sequential : 순차적인

소프트웨어 상위설계

아키텍쳐 설계, 데이터 설계, 시스템 분할, 인터페이스 정의, UI 설계

하위 설계 : 모듈 설계, 인터페이스 작성

정형 명세법 : 
수학적 기반/모델링 기반
Z, VDM, Petri-Net(모형 기반)
CSP, CCS, LOTOS 대수적 방법
시스템 요구 특성이 정확하고 명세가 간결, 명세와 구현 일치

비정형 명세법:
상태 기능 객체 중심 명세법
FSM(Finite state machine)
Decision Table, ER 모델링
State chart(SADT)불충분한 명세 가능성, 모호성

cppcheck c/c++ 오버플로우 검사

삽입정렬
자리에 따라 비교하고 오름차순 적용하여 바꾸는 것
2번째 원소부터 시작하여 그 앞쪽의 원소들과 비교하여 삽입할 위치를 지정한 후, 원소를 뒤로 옮기고 지정된 자리에 자료를 삽입

인터페이스 구현 검증 도구
xUnit, STAF, NTAF, ...

협약(contract) : 클래스에 대한 여러 가정을 공유하도록 명세한 것을 협약에 의한 설계

일반화 관계 : 하나의 사물이 다른 사물에 비해 더 일반적인지 구체적인지를 표현함
빈 화살표로 연결
ex) 버스 트럭 택시는 모두 차에 속한다.

신뢰성 : 주어진 시간동안 주어진 기능을 오류없이 수행하는 정도
기능성 : 사용자의 요구사항을 정확하게 만족하는 기능을 제공하는지 여부
사용성 : 사용자와 컴퓨터 사이에 발생하는 어떠한 행위에 대해 사용자가 정확하게 이해하고 사용하며 다시 사용하고 싶은 정도
효율성 : 요구하는 기능을 할당된 시간동안 한정된 자원으로 얼마나 빨리 처리할 수 있는지 정도
유지보수성 : 환경 변화 or 새 요구사항 발생 시 소프트웨어 개선 및 확장 할 수 있는 정도
이식성 : 타 환경에서도 얼마나 쉽게 적용할 수 있는지 정도

백트래킹 : 모든 조합을 시도하여 문제의 답을 찾는 알고리즘

물리데이터 저장소의 파티션 설계의 파티션 유형

범위 분할 : 지정한 열의 값을 기준으로 분할
해시 분할 : 해시 함수를 적용한 결과 값에 따라 데이터 분할
조합 분할 : 범위 분할 후 해시 함수를 적용하여 다시 분할

트리에서의 차수는 노드 중 가장 많은 자식노드의 개수

로킹의 단위가 크면 나머지 다 작아지고 / 로킹 단위가 작으면 나머지 다 큼

뷰는 하나이상의 테이블로부터 유도되는 가상 테이블이며 논리적 독립성이 제공됨
실제 테이블처럼 권한도 나눌 수 있지만
뷰는 자체적으로 인덱스를 가지지 않습니다.
그래서 삽입,삭제 수정에 제약이 있다.


분산 데이터베이스의 투명성
분할 투명성, 위치 투명성, 지역 사상 투명성, 중복 투명성, 장애 투명성, 병행 투명성

-위치투명성(Location Trasparency) 데이터 베이스의 실제 위치를 알 필요 없이 단지 데이터베이스의 논리적인 명칭만으로 엑세스할 수 있음
-중복투명성(Replication Transparency) 데이터가 여러 곳에 중복되어 있더라도 사용자는 마치 하나의 데이터만 존재하는 것 처럼 사용 가능, 시스템은 자동으로 여러 자료에 대한 작업 수행
-병행투명성(Concurrency Transparency) 다수의 트랜잭션이 동시에 실현되더라도 그 결과는 영향을 받지 않음
-장애투명성(Failure Transparency) 트랜잭션, DBMS, 네트워크, 컴퓨터 장애에도 트랜잭션을 정확히 처리함.

BETWEEN에는 or는 없다.

회복
트랜잭션 도중에 손상된 데이터 베이스를 이전 상태로 복귀하는 작업
트랜잭션의 연산을 수행할 때 데이터베이스를 변경하기 전에 로그 데이터를 생성

장애의 유형 : 트랜잭션 장애, 시스템 장애, 미디어 장애

즉각 갱신기법 : 갱신 할 때 마다 실제 데이터베이스에 바로 반영
연기 갱신기법 : 트랜잭션을 완전히 완료 할 때 까지 갱신을 연기
그림자 페이지 대체 기법 – 로그가 필요없다는 점이 중요

데이터 조작어(Data Manipulation Language) : Select, INSERT, DELETE, UPDATE
SIND 
데이터 정의어 : CREATE ALTER DROP
CAD
데이터 제어어 : COMMIT, ROLLBACK, GRANT, REVOKE
CRGR

HRN  방식의 우선순위 산정 공식
(대기시간+서비스시간)/서비스 시간

정보보안의 3대요소 : 기밀성, 무결성, 가용성

블록 암호화 방식 : DES, SEED, AES, ARIA
스트림 암호화 방식 : LFSR, RC4

RIP (라우팅 인포메이션 프로토콜)
거리 벡터 라우팅 프로토콜 이라고 한다
소규모 네트워크 환경에 적합하다 따라서 최대 홉 카운트는 15이다.
최단 경로 탐색에서는 Bellman-Ford 알고리즘을 사용한다.

워크스루 : 검토 회의 전에 요구사항 명세서를 미리 배포하여 사전 검토한 후 짧은 검토 회의를 통해 오류를 조기에 검출하는데 목적을 두는 요구사항 검토 방법

동료 검토 : 2~3명이 진행하는 리뷰형태로 작성자가 설명하고 이해관계자들이 설명을 들으면서 결함을 발견하는 형태

1. 연상 코드(명칭, 약호): 항목의 명칭이나 약호와 관계 있는 숫자, 문자, 기호를 이용하여 코드를 부여하는 방법
2. 블록 코드(블록): 대상 항목에서 공통적인 것을 블록으로 구분하고 블록 내에 일련 번호를 부여하는 방법
3. 순차 코드(일정 기준, 일련번호): 일정 기준에 따라 최초의 자료부터 일련번호를 부여하는 방법
4. 표의 숫자 코드(물리적인 수치): 길이 넓이 부피 등 항목의 성질의 물리적인 수치를 그대로 코드에 적용시키는 방법

XP의 5가지 가치
용기(Courage) : 고객의 요구사항 변화에 능동적인 대처
단순성(Simplicity) : 부가적 기능, 사용되지 않는 구조와 알고리즘 배제
커뮤니케이션(Communication) : 개발자, 관리자, 고객 간의 원활한 의사소통
피드백(Feedback) : 지속적인 테스트와 반복적 결함 수정, 빠른 피드백
존중(Respect) : 모든 프로젝트 관리자는 팀원의 기여를 존중

HIPO(Hierarchy Input Process Output)
하향식 소프트웨어 개발

반 정규화 유형 중 중복 테이블을 추가하는 방법
진행 테이블, 집계 테이블, 특정 부분만 포함하는 테이블

동치 분할 검사(입력자료에 초점) : 입력 자료에 초점을 맞춰 케이스를 만들고 검사하는 방법 - 블랙박스 테스트 종류
알파 테스트(개발자의 장소에서 사용자와 함께) : 개발자의 장소에서 사용자가 개발자 앞에서 행하는 테스트 기법 - 인수 테스트 종류
베타 테스트(테스터 모집해요~) : 선정된 최종 사용자가 여러명의 사용자 앞에서 행하는 테스트 기법 - 인수 테스트 종류

백도어 탐지 방법 : 무결성 검사 / 로그 분석 / SetUID 파일 검사 / 열린 포트 검사 / 바이러스 및 백도어 탐지 툴 이용
닫힌 포트 X -> 열린포트 확인 